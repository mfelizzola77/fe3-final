{"ast":null,"code":"var _jsxFileName = \"/Users/sebastianruiz/Documents/Juan DigitalHouse/React/ProyectoFinal/src/Components/utils/global.context.jsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState, useMemo, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ContextGlobal = /*#__PURE__*/createContext();\nexport const initialState = {\n  theme: '',\n  data: []\n};\nexport const ContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [darkTheme, setDarkTheme] = useState(false);\n  const [dentists, setDentists] = useState([]); //Aqui deberan implementar la logica propia del Context, utilizando el hook useMemo\n\n  const toggleTheme = () => {\n    setDarkTheme(prevTheme => !prevTheme);\n  };\n\n  const themeClass = useMemo(() => darkTheme ? 'dark' : 'light', [darkTheme]); //Implementacion logica para traer datos de API\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('https://jsonplaceholder.typicode.com/users');\n        const data = await response.json();\n        setDentists(data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ContextGlobal.Provider, {\n    value: {\n      darkTheme,\n      toggleTheme\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: themeClass,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContextProvider, \"rvpdvyCTWq61pTupEmEYDz0nKOU=\");\n\n_c = ContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"names":["createContext","useState","useMemo","useEffect","ContextGlobal","initialState","theme","data","ContextProvider","children","darkTheme","setDarkTheme","dentists","setDentists","toggleTheme","prevTheme","themeClass","fetchData","response","fetch","json","error","console"],"sources":["/Users/sebastianruiz/Documents/Juan DigitalHouse/React/ProyectoFinal/src/Components/utils/global.context.jsx"],"sourcesContent":["import { createContext, useState, useMemo, useEffect } from 'react';\n\nexport const ContextGlobal = createContext();\nexport const initialState = { theme: '', data: [] };\n\nexport const ContextProvider = ({ children }) => {\n\n  const [darkTheme, setDarkTheme] = useState(false);\n  const [dentists, setDentists] = useState([]);\n\n  //Aqui deberan implementar la logica propia del Context, utilizando el hook useMemo\n  const toggleTheme = () => {\n    setDarkTheme((prevTheme) => !prevTheme);\n  };\n  const themeClass = useMemo(() => (darkTheme ? 'dark' : 'light'), [darkTheme]);\n\n  //Implementacion logica para traer datos de API\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('https://jsonplaceholder.typicode.com/users');\n        const data = await response.json();\n        setDentists(data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n\n\n\n \n\n \n  \n  return (\n    <ContextGlobal.Provider value={{ darkTheme, toggleTheme }}>\n        <div className={themeClass}>{children}</div>\n    </ContextGlobal.Provider>\n  );\n};\n"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,EAAkCC,OAAlC,EAA2CC,SAA3C,QAA4D,OAA5D;;AAEA,OAAO,MAAMC,aAAa,gBAAGJ,aAAa,EAAnC;AACP,OAAO,MAAMK,YAAY,GAAG;EAAEC,KAAK,EAAE,EAAT;EAAaC,IAAI,EAAE;AAAnB,CAArB;AAEP,OAAO,MAAMC,eAAe,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EAE/C,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,KAAD,CAA1C;EACA,MAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC,CAH+C,CAK/C;;EACA,MAAMa,WAAW,GAAG,MAAM;IACxBH,YAAY,CAAEI,SAAD,IAAe,CAACA,SAAjB,CAAZ;EACD,CAFD;;EAGA,MAAMC,UAAU,GAAGd,OAAO,CAAC,MAAOQ,SAAS,GAAG,MAAH,GAAY,OAA7B,EAAuC,CAACA,SAAD,CAAvC,CAA1B,CAT+C,CAW/C;;EACAP,SAAS,CAAC,MAAM;IACd,MAAMc,SAAS,GAAG,YAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4CAAD,CAA5B;QACA,MAAMZ,IAAI,GAAG,MAAMW,QAAQ,CAACE,IAAT,EAAnB;QACAP,WAAW,CAACN,IAAD,CAAX;MACD,CAJD,CAIE,OAAOc,KAAP,EAAc;QACdC,OAAO,CAACD,KAAR,CAAc,sBAAd,EAAsCA,KAAtC;MACD;IACF,CARD;;IASAJ,SAAS;EACV,CAXQ,EAWN,EAXM,CAAT;EAmBA,oBACE,QAAC,aAAD,CAAe,QAAf;IAAwB,KAAK,EAAE;MAAEP,SAAF;MAAaI;IAAb,CAA/B;IAAA,uBACI;MAAK,SAAS,EAAEE,UAAhB;MAAA,UAA6BP;IAA7B;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CApCM;;GAAMD,e;;KAAAA,e"},"metadata":{},"sourceType":"module"}